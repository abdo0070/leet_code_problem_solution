class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList();
        backtrack(ans , candidates,new ArrayList(), 0 , target); 
        return ans;
    }
    void backtrack(List<List<Integer>> ans ,int[] cand,List<Integer> temp ,int index ,int target){
        if (target < 0 ){
            return ;
        }
        if (target == 0){
            ans.add(new ArrayList(temp));
 
        }
        for (int i = index ; i < cand.length ; i++){
            temp.add(cand[i]);
        backtrack(ans , cand ,temp ,i , target-cand[i]);
            temp.remove( temp.size() - 1);
        }
    }
}
